openapi: 3.0.3
info:
  title: User API
  description: API untuk mengelola pengguna (registrasi, login, reset password, dan profil).
  version: 1.0.0
  contact:
    email: support@example.com

servers:
  - url: http://localhost:5000/api
    description: Local development server
  - url: http://localhost:5000/api
    description: Deployed server on Render

tags:
  - name: Users
    description: API untuk mengelola data pengguna, termasuk registrasi, login, reset password, dan profil.

paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Register a new user
      description: Membuat akun pengguna baru dengan validasi input dan rate limiting.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                phoneNumber:
                  type: string
                  example: "081234567890"
                email:
                  type: string
                  format: email
                  example: "bagus@gmail.com"
                password:
                  type: string
                  example: "password"
              required:
                - name
                - phoneNumber
                - email
                - password
      responses:
        "201":
          description: User berhasil didaftarkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Validasi gagal atau email/nomor telepon sudah terdaftar
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: "Nama wajib diisi"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Registrasi gagal"

  /users/login:
    post:
      tags:
        - Users
      summary: Login user
      description: Melakukan login pengguna untuk mendapatkan token JWT dengan rate limiting.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "bagus@gmail.com"
                password:
                  type: string
                  example: "password"
              required:
                - email
                - password
      responses:
        "200":
          description: Login berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Validasi gagal
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: "Email tidak valid"
        "401":
          description: Email atau password salah
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email atau password salah"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login gagal"

  /users/forgot-password:
    post:
      tags:
        - Users
      summary: Request reset password
      description: Mengirim email untuk reset password dengan rate limiting.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "bagus@gmail.com"
              required:
                - email
      responses:
        "200":
          description: Email reset berhasil dikirim
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email reset telah dikirim"
        "400":
          description: Validasi gagal
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        msg:
                          type: string
                          example: "Email tidak valid"
        "404":
          description: User tidak ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User tidak ditemukan"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gagal mengirim email"

  /users/reset-password/{token}:
    post:
      tags:
        - Users
      summary: Reset password
      description: Mengatur ulang password menggunakan token.
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
            example: "abc123..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "newpassword123"
              required:
                - password
      responses:
        "200":
          description: Password berhasil direset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password berhasil direset"
        "400":
          description: Validasi gagal atau token invalid/expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token invalid atau expired"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gagal reset password"

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      description: Mendapatkan profil pengguna yang sedang login.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Profil pengguna
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gagal update profil"
    put:
      tags:
        - Users
      summary: Update user profile
      description: Memperbarui profil pengguna yang sedang login.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "John Doe"
                phoneNumber:
                  type: string
                  example: "081234567890"
                email:
                  type: string
                  format: email
                  example: "bagus@gmail.com"
                password:
                  type: string
                  example: "newpassword123"
              required: false
      responses:
        "200":
          description: Profil berhasil diperbarui
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gagal update profil"
    delete:
      tags:
        - Users
      summary: Delete user account
      description: Menghapus akun pengguna yang sedang login.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Akun berhasil dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Akun berhasil dihapus"
        "500":
          description: Error server
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Gagal menghapus akun"

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          example: "60d5f8c3b1f2a6a8c0e4b2f3"
        name:
          type: string
          example: "John Doe"
        phoneNumber:
          type: string
          example: "081234567890"
        email:
          type: string
          format: email
          example: "bagus@gmail.com"
        role:
          type: string
          enum: [user, admin]
          example: "user"
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2023-01-02T00:00:00Z"
      required:
        - name
        - phoneNumber
        - email
